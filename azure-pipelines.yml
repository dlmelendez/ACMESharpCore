
trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:

- task: Bash@3
  displayName: 'install openssl'
  inputs:
    targetType: 'inline'
    script: 'sudo apt-get install -y openssl'

- task: Bash@3
  displayName: 'openssl version'
  inputs:
    targetType: 'inline'
    script: 'openssl version'

- task: UseDotNet@2
  displayName: 'Use .Net Core sdk 8.x'
  inputs:
    version: 8.x

- task: DotNetCoreCLI@2
  displayName: 'dotnet build'
  inputs:
    projects: '**/ACMESharpCore.sln'
    arguments: '-c $(BuildConfiguration) '

- task: DotNetCoreCLI@2
  displayName: 'dotnet test'
  inputs:
    command: 'test'
    publishTestResults: true
    projects: '**/**UnitTests.csproj'
    arguments: '--no-build --collect:"XPlat Code Coverage" -c $(BuildConfiguration) -v d'

- task: PublishCodeCoverageResults@2
  displayName: 'Publish Code Coverage'
  inputs:
    summaryFileLocation: '**/coverage.cobertura.xml'

- task: CopyFiles@1
  displayName: 'Copy Files to: $(Build.ArtifactStagingDirectory)'
  inputs:
    Contents: |
     **/*.dll
     **/*.nupkg
     **/*.snupkg
     **/*.zip
     **/publish/**
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'